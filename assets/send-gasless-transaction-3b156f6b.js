import{a1 as a,cP as d}from"./index-d8b6f218.js";async function _({account:n,transaction:t,serializableTransaction:e,gasless:r}){if(e.value&&e.value>0n)throw new Error("Gasless transactions cannot have a value");let o;if(r.provider==="biconomy"){const{relayBiconomyTransaction:i}=await a(()=>import("./biconomy-e06dcdbf.js"),["assets/biconomy-e06dcdbf.js","assets/index-d8b6f218.js","assets/index-2ed5f339.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(r.provider==="openzeppelin"){const{relayOpenZeppelinTransaction:i}=await a(()=>import("./openzeppelin-bf5daedd.js"),["assets/openzeppelin-bf5daedd.js","assets/index-d8b6f218.js","assets/index-2ed5f339.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(r.provider==="engine"){const{relayEngineTransaction:i}=await a(()=>import("./engine-5bb119f3.js"),["assets/engine-5bb119f3.js","assets/index-d8b6f218.js","assets/index-2ed5f339.css"]);o=await i({account:n,transaction:t,serializableTransaction:e,gasless:r})}if(!o)throw new Error("Unsupported gasless provider");return d({address:n.address,transactionHash:o.transactionHash,chainId:t.chain.id}),o}export{_ as sendGaslessTransaction};
