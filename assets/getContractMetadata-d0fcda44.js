import{_ as e,N as o}from"./index-1ebb32ef.js";import{i as s,a as i}from"./parseNft-20a59f34.js";import{n as m,s as l}from"./symbol-66178518.js";import"./uint8-array-0bc57be6.js";async function u(a){const{client:t,uri:n}=a;if(s(n))try{return JSON.parse(i(n))}catch(r){console.error("Failed to decode base64 encoded contract metadata",{uri:n},r);return}const{download:c}=await e(()=>import("./index-1ebb32ef.js").then(r=>r.cI),["./index-1ebb32ef.js","./index-b446a0d4.css"],import.meta.url);return await(await c({client:t,uri:n})).json()}const d="0xe8a3d485",_=[],f=[{type:"string"}];async function y(a){return o({contract:a.contract,method:[d,_,f],params:[]})}async function b(a){const[t,n,c]=await Promise.all([y(a).then(r=>r?u({client:a.contract.client,uri:r}):null).catch(()=>null),m(a).catch(()=>null),l(a).catch(()=>null)]);return{...t,name:(t==null?void 0:t.name)??n,symbol:(t==null?void 0:t.symbol)??c}}export{b as getContractMetadata};
