import{cL as m,al as d,ao as L,_ as u}from"./index-67021abe.js";import{getContractMetadata as b}from"./getContractMetadata-f03a428b.js";import{h,M as A,c as p}from"./erc721-e758cf42.js";import"./symbol-3a6250e5.js";import"./ownerOf-6d1d4fe1.js";import"./upload-77e4e2af.js";import"./regex-88e9c765.js";import"./prepare-event-8d6b5ca4.js";async function S(r){const{contract:t,merkleRoot:y,claimer:s}=r,o=((await b({contract:t})).merkle||{})[y];if(!o)return null;const n=await(await m({client:t.client,uri:o})).json(),D=s.slice(2,2+n.shardNybbles).toLowerCase(),k=n.baseUri.endsWith("/")?n.baseUri:`${n.baseUri}/`;let i;try{const e=`${k}${D}.json`;i=await(await m({client:t.client,uri:e})).json()}catch{return null}const w=await Promise.all(i.entries.map(async e=>h({entry:e,chain:t.chain,client:t.client,tokenDecimals:r.tokenDecimals}))),f=new A(w),a=i.entries.find(e=>e.address.toLowerCase()===s.toLowerCase());if(!a)return null;const _=f.getHexProof(await h({entry:a,chain:t.chain,client:t.client,tokenDecimals:r.tokenDecimals})).concat(i.proofs),c=a.currencyAddress||d,P=await(async()=>{if(L(c)||c===d)return 18;const[{getContract:e},{decimals:l}]=await Promise.all([u(()=>import("./index-67021abe.js").then(E=>E.cQ),["assets/index-67021abe.js","assets/index-5de01fb5.css"]),u(()=>import("./decimals-a4348106.js"),["assets/decimals-a4348106.js","assets/index-67021abe.js","assets/index-5de01fb5.css","assets/decimals-a697691d.js"])]),C=e({address:c,chain:t.chain,client:t.client});return await l({contract:C})})();return{proof:_,quantityLimitPerWallet:p({quantity:a.maxClaimable||"unlimited",tokenDecimals:r.tokenDecimals}),pricePerToken:p({quantity:a.price||"unlimited",tokenDecimals:P}),currency:c}}export{S as fetchProofsForClaimer};
